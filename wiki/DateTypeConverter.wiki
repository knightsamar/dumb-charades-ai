{{{
package com.patni.utils;

import java.util.Calendar;
import java.util.Map;
import org.apache.struts2.util.StrutsTypeConverter;
import com.opensymphony.xwork2.util.TypeConversionException;
import com.patni.utils.Date;

public class DateTypeConverter extends StrutsTypeConverter
{

	@SuppressWarnings("unchecked")
	@Override
	public Object convertFromString(Map context, String[] values, Class toClass) throws TypeConversionException
	{
		if((values[0] == null) || (values[0].length() == 0))
		{
			// No value provided by the user. We cannot convert
			throw new TypeConversionException("Date value not specified");
		}
		else
		{
			Date d = Date.getInstance(values[0]);
			if(d == null)
			{
				System.out.println("Unable to convert the date.......");
				throw new TypeConversionException("Invalid Date");
			}
			else
			{
				// The birthDate has to be smaller than the current date
				Date currentDate = new Date(Calendar.getInstance());
				
				if(d.compareTo(currentDate) >= 0)
				{
					// Birth Date provided is in future
					throw new TypeConversionException("Invalid Date");
				}
				else
				{
					return d;
				}
			}
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public String convertToString(Map arg0, Object o)
	{
		return ((Date) o).toString("/");
	}

}

}}}